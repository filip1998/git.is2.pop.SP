DROP TABLE IF EXISTS public.storage CASCADE;
DROP TABLE IF EXISTS public.item CASCADE;
DROP TABLE IF EXISTS public.document_type CASCADE;
DROP TABLE IF EXISTS public.documents CASCADE;
DROP TABLE IF EXISTS public.transaction CASCADE;


CREATE TABLE IF NOT EXISTS public.storage
(
    id integer NOT NUL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    storage_code character varying(50) NOT NULL,
    address character varying(50) NOT NULL,
	contact character varying(50) NOT NULL,
    CONSTRAINT "PK_storage" PRIMARY KEY (id)
);


CREATE TABLE IF NOT EXISTS public.item
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    item_code character varying(50) NOT NULL,
    item_name character varying(50) NOT NULL,
    item_quantity integer NOT NULL DEFAULT 0,
    item_price character varying(50) NOT NULL,
    CONSTRAINT "PK_item" PRIMARY KEY (id),
    CONSTRAINT fk_storage
      FOREIGN KEY(storage_id) 
	  REFERENCES storage(id)

);



CREATE TABLE IF NOT EXISTS public.document_type
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    document_type_name character varying(50) NOT NULL,
    CONSTRAINT "PK_document_type" PRIMARY KEY (id)
   
);



CREATE TABLE IF NOT EXISTS public.document
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    quantity_of_items integer NOT NULL,
    CONSTRAINT "PK_document" PRIMARY KEY (id),
    CONSTRAINT fk_item
      FOREIGN KEY(item_id) 
	  REFERENCES item(id)
    price_total decimal NOT NULL,
    date DATETIME NOT NULL
    
);

CREATE TABLE IF NOT EXISTS public.transport
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
   CONSTRAINT fk_document
      FOREIGN KEY(document_id) 
	  REFERENCES document(id),
    CONSTRAINT fk_storage
      FOREIGN KEY(storage_id) 
	  REFERENCES storage(id)
);


INSERT INTO public.item VALUES ('01','Tenisice', '450 kn', 1);
INSERT INTO public.item VALUES ('02','Japanke', '120 kn', 2);

INSERT INTO public.document_type VALUES (1,'Među skladišnica');
INSERT INTO public.document_type VALUES (2,'Otpremnica');
INSERT INTO public.document_type VALUES (3,'Primka');

INSERT INTO public.storage VALUES (1, 'Skladiste Nike','Andrije Štampara 3, 35400 Nova Gradiška', '0911112233' );
INSERT INTO public.storage VALUES (2, 'Skladiste Puma','Ljudevita Gaja 5, 10410 Velika Gorica', '0923334455' );
INSERT INTO public.storage VALUES (3, 'Skladiste Adidas','Ivana Gorana Kovačića 18, 10000 Zagreb', 0956667788);

INSERT INTO public.document VALUES (1, '0123', 5, 1, 504.201, '05-03-2022');
INSERT INTO public.document VALUES (2, '0124', 4, 2, 211.40, '01-02-2022');
INSERT INTO public.document VALUES (3, '0125', 10, 2, 100.52, '01-01-2022');

INSERT INTO public.transport VALUES (1, 1, 1);
INSERT INTO public.transport VALUES (2, 2, 2);


ALTER TABLE IF EXISTS public.item OWNER to postgres;
ALTER TABLE IF EXISTS public.storage OWNER to postgres;
ALTER TABLE IF EXISTS public.document_type OWNER to postgres;
ALTER TABLE IF EXISTS public.document OWNER to postgres;
ALTER TABLE IF EXISTS public.transport OWNER to postgres;